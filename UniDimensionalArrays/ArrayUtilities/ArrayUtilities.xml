<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ArrayUtilities</name>
    </assembly>
    <members>
        <member name="T:ArrayUtilities.ArrayHelper">
            <summary>
            Utilites for arrays.
            </summary>
        </member>
        <member name="M:ArrayUtilities.ArrayHelper.Min(System.Int32[])">
            <summary>
            Calculates the minimum element.
            If min cannot be determined (e.g.: array is null, or empty) it will
            return <see cref="F:System.Int32.MinValue"/>.
            </summary>
            <param name="array">The array.</param>
            <returns>The min value.</returns>
        </member>
        <member name="M:ArrayUtilities.ArrayHelper.Max(System.Int32[])">
            <summary>
            Calculates the maximum element.
            If max cannot be determined (e.g.: array is null, or empty) it will
            return <see cref="F:System.Int32.MaxValue"/>.
            </summary>
            <param name="array">The array.</param>
            <returns>The max value.</returns>
        </member>
        <member name="M:ArrayUtilities.ArrayHelper.Clone(System.Int32[])">
            <summary>
            Clones the original array into a new one, copying all elements.
            </summary>
            <param name="array">The original array.</param>
            <returns>A clone containing the same elements.</returns>
        </member>
        <member name="M:ArrayUtilities.ArrayHelper.BubbleSort(System.Int32[],ArrayUtilities.SortDirection)">
            <summary>
            Sorts the array using the bubble sort algorithm.
            </summary>
            <param name="array">The original array.</param>
            <param name="sortDirection">The sort direction</param>
            <returns>The array having the elements sorted.</returns>
        </member>
        <member name="M:ArrayUtilities.ArrayHelper.SelectionSort(System.Int32[],ArrayUtilities.SortDirection)">
            <summary>
            Sorts the array using the selection sort algorithm.
            </summary>
            <param name="array">The original array.</param>
            <param name="sortDirection">The sort direction</param>
            <returns>The array having the elements sorted.</returns>
        </member>
        <member name="M:ArrayUtilities.ArrayHelper.Fibonacci(System.Int32)">
            <summary>
            Calculates the fibonacci sequence till n.
            </summary>
            <param name="n">The number till which we calculate fibonacci sequence.</param>
            <returns>The fibonacci sequence till n.</returns>
        </member>
        <member name="M:ArrayUtilities.ArrayHelper.PrimesEratostene(System.Int32)">
            <summary>
            Returns the sequence of prime numbers till "n" using the Eratostene sieve algorithm.
            </summary>
            <param name="n">The number till which we return prime numbers.</param>
            <returns>The sequence of prime numbers till "n".</returns>
        </member>
        <member name="M:ArrayUtilities.ArrayHelper.Print(System.String,System.Int32[])">
            <summary>
            Prints the array to the console.
            </summary>
            <param name="label">Label used before the array elements.</param>
            <param name="array">The array elements.</param>
        </member>
        <member name="M:ArrayUtilities.ArrayHelper.Print(System.String,System.Int64[])">
            <summary>
            Prints the array to the console.
            </summary>
            <param name="label">Label used before the array elements.</param>
            <param name="array">The array elements.</param>
        </member>
        <member name="M:ArrayUtilities.ArrayHelper.ReadMatrix(System.String)">
            <summary>
            Reads a matrix from console.
            </summary>
            <param name="label">The matrix label.</param>
            <returns>The matrix, as read from the console.</returns>
        </member>
        <member name="M:ArrayUtilities.ArrayHelper.PrintMatrix(System.String,System.Int32[0:,0:])">
            <summary>
            Prints a matrix to the console.
            </summary>
            <param name="label">The matrix label.</param>
            <param name="matrix">The matrix.</param>
        </member>
        <member name="M:ArrayUtilities.ArrayHelper.PrintMainDiagonal(System.Int32[0:,0:])">
            <summary>
            Prints the matrix main diagonal.
            </summary>
            <param name="matrix">The matrix.</param>
        </member>
        <member name="M:ArrayUtilities.ArrayHelper.GetMainDiagonal(System.Int32[0:,0:])">
            <summary>
            Gets the elements from the main diagonal as an array of integers.
            </summary>
            <param name="matrix">The matrix.</param>
            <returns>The elements from the main diagonal as an array of integers.</returns>
        </member>
        <member name="M:ArrayUtilities.ArrayHelper.SumMatrices(System.Int32[0:,0:],System.Int32[0:,0:])">
            <summary>
            Calculates the sum of two matrices.
            </summary>
            <param name="matrix1">The first matrix.</param>
            <param name="matrix2">The second matrix.</param>
            <returns>The matrix representing the sum of the two matrices.</returns>
        </member>
        <member name="M:ArrayUtilities.ArrayHelper.ProductMatrices(System.Int32[0:,0:],System.Int32[0:,0:])">
            <summary>
            Calculates the product of two matrices.
            </summary>
            <param name="matrix1">The first matrix.</param>
            <param name="matrix2">The second matrix.</param>
            <returns>The matrix representing the product of the two matrices.</returns>
        </member>
        <member name="M:ArrayUtilities.ArrayHelper.CartesianProduct(System.Int32[],System.Int32[])">
            <summary>
            Calculates the cartesian product of 2 sets and returns the pairs as an jagged array.
            </summary>
            <param name="set1">The first set.</param>
            <param name="set2">The second set.</param>
            <returns>The cartesian product of 2 sets and returns the pairs as an jagged array.</returns>
        </member>
        <member name="M:ArrayUtilities.ArrayHelper.PrintJaggedArray(System.String,System.Int32[][])">
            <summary>
            Prints a jagged array.
            </summary>
            <param name="label">The label.</param>
            <param name="array">The jagged array</param>
        </member>
        <member name="T:ArrayUtilities.ConsoleHelper">
            <summary>
            Utilities for working with the console.
            </summary>
        </member>
        <member name="T:ArrayUtilities.SortDirection">
            <summary>
            Enumerates the possible sort directions.
            </summary>
        </member>
        <member name="F:ArrayUtilities.SortDirection.Ascending">
            <summary>
            Specifies ascending sort order.
            </summary>
        </member>
        <member name="F:ArrayUtilities.SortDirection.Descending">
            <summary>
            Specifies descending sort order.
            </summary>
        </member>
    </members>
</doc>
